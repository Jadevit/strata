name: Build Desktop Installers

on:
  workflow_dispatch:
  workflow_call:

concurrency:
  group: desktop-installers-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-22.04
          - os: windows-latest
          - os: macos-14

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust (stable)
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: stable

      - name: Cache Rust
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: |
            apps/desktop/src-tauri/sidecar/runtime-installer
            .

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Get pnpm store dir
        shell: bash
        run: echo "PNPM_STORE_PATH=$(pnpm store path --silent)" >> "$GITHUB_ENV"

      - name: Restore pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.PNPM_STORE_PATH }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Linux deps (GTK/WebKit + appindicator)
        if: matrix.os == 'ubuntu-22.04'
        run: |
          set -eux
          sudo apt-get update
          sudo apt-get install -y \
            libgtk-3-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev \
            patchelf
          sudo apt-get install -y libwebkit2gtk-4.1-dev || sudo apt-get install -y libwebkit2gtk-4.0-dev

      - name: Windows deps (WiX Toolset)
        if: startsWith(matrix.os, 'windows')
        shell: powershell
        run: choco install -y wixtoolset --no-progress

      - name: Install workspace deps
        run: pnpm install -w --frozen-lockfile

      - name: Install app deps (apps/desktop)
        working-directory: apps/desktop
        run: pnpm install --frozen-lockfile

      - name: Build sidecar (runtime-installer)
        run: |
          cargo build --manifest-path apps/desktop/src-tauri/sidecar/runtime-installer/Cargo.toml --release

      - name: Stage sidecar into resources
        shell: bash
        run: |
          set -eux
          SRC_DIR="target/release"
          DEST_DIR="apps/desktop/src-tauri/resources"
          mkdir -p "$DEST_DIR"
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            cp "$SRC_DIR/runtime-installer.exe" "$DEST_DIR/runtime-installer.exe"
          else
            cp "$SRC_DIR/runtime-installer" "$DEST_DIR/runtime-installer"
            chmod +x "$DEST_DIR/runtime-installer"
          fi

      - name: Build Tauri app (release)
        working-directory: apps/desktop
        env:
          STRATA_RUNTIME_DIR: ${{ github.workspace }}/apps/desktop/src-tauri/resources
          CARGO_FEATURES: dynamic-link
        run: |
          pnpm dlx @tauri-apps/cli@latest build --features dynamic-link

      - name: Upload installers
        uses: actions/upload-artifact@v4
        with:
          name: installers-${{ matrix.os }}
          path: |
            apps/desktop/src-tauri/target/release/bundle/**
          if-no-files-found: error